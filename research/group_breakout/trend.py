from dataclasses import dataclass
import akshare as ak
import json
from openai import OpenAI
import os
import time

print(os.environ.get("DEEPSEEK_API_KEY"))

client = OpenAI(
    api_key=os.environ.get("DEEPSEEK_API_KEY"), base_url="https://api.deepseek.com"
)

prompt = """
你是一个经验丰富的交易员

你的任务是进行A股市场分析，主要的目标是寻找上升趋势且刚突破了短期形态，或者触碰短期或长期上升趋势线后出阳线的板块。 

我希望的买点就是板块刚突破时的第一或第二根阳K线，买第二根K线时需要将第一和第二根K线连接成趋势线，不能跌破。或者触碰上升趋势线后反弹出的第一根阳线，不能是阴线

上升趋势线的定义是：两个重要局部低点所连接的线，并且第二个低点高于第一个低点，时间周期至少要相隔5个交易日

使用对数坐标

下面我输入某板块最近一段时间的日K线数据，每日数据包括日期开盘收盘最高最低价，你需要分析该板块当前是什么样的形态，是否符合买点

样例输入1为：
阿里巴巴概念
[{"date": "20250701", "open": 1818.367, "high": 1818.367, "low": 1787.559, "close": 1801.935, "vol": 8490944500}, {"date": "20250702", "open": 1796.458, "high": 1796.458, "low": 1767.284, "close": 1777.222, "vol": 7217768600}, {"date": "20250703", "open": 1775.888, "high": 1786.674, "low": 1771.818, "close": 1784.244, "vol": 6217835200}, {"date": "20250704", "open": 1786.694, "high": 1805.231, "low": 1772.359, "close": 1783.002, "vol": 8580278400}, {"date": "20250707", "open": 1780.031, "high": 1796.865, "low": 1778.832, "close": 1796.086, "vol": 7478783000}, {"date": "20250708", "open": 1794.138, "high": 1823.488, "low": 1790.446, "close": 1823.488, "vol": 8967520000}, {"date": "20250709", "open": 1823.366, "high": 1832.806, "low": 1817.277, "close": 1822.274, "vol": 9704708400}, {"date": "20250710", "open": 1817.413, "high": 1829.12, "low": 1809.759, "close": 1821.709, "vol": 9209389500}, {"date": "20250711", "open": 1823.655, "high": 1848.944, "low": 1809.739, "close": 1842.498, "vol": 10519778800}, {"date": "20250714", "open": 1843.904, "high": 1845.34, "low": 1828.933, "close": 1837.634, "vol": 9033554200}, {"date": "20250715", "open": 1833.86, "high": 1847.035, "low": 1816.817, "close": 1847.035, "vol": 10342309600}, {"date": "20250716", "open": 1847.954, "high": 1870.139, "low": 1845.583, "close": 1856.318, "vol": 9372628300}, {"date": "20250717", "open": 1852.626, "high": 1871.424, "low": 1848.148, "close": 1871.424, "vol": 9388911800}, {"date": "20250718", "open": 1876.795, "high": 1885.776, "low": 1866.771, "close": 1871.078, "vol": 9601999700}, {"date": "20250721", "open": 1865.374, "high": 1876.997, "low": 1862.788, "close": 1876.439, "vol": 8633723900}, {"date": "20250722", "open": 1874.636, "high": 1875.327, "low": 1855.686, "close": 1865.912, "vol": 9063203700}, {"date": "20250723", "open": 1861.982, "high": 1874.939, "low": 1850.1, "close": 1858.286, "vol": 8770363500}, {"date": "20250724", "open": 1857.251, "high": 1883.153, "low": 1857.251, "close": 1883.153, "vol": 8799148800}, {"date": "20250725", "open": 1886.056, "high": 1902.443, "low": 1880.414, "close": 1902.409, "vol": 10198836800}, {"date": "20250728", "open": 1905.177, "high": 1905.475, "low": 1890.467, "close": 1903.421, "vol": 9245215500}, {"date": "20250729", "open": 1898.429, "high": 1907.379, "low": 1878.178, "close": 1907.379, "vol": 8829763800}, {"date": "20250730", "open": 1902.001, "high": 1905.461, "low": 1872.838, "close": 1887.223, "vol": 9349945900}, {"date": "20250731", "open": 1888.95, "high": 1915.75, "low": 1883.991, "close": 1889.596, "vol": 10603768200}, {"date": "20250801", "open": 1898.208, "high": 1909.799, "low": 1877.576, "close": 1904.087, "vol": 10316327200}, {"date": "20250804", "open": 1892.083, "high": 1918.936, "low": 1886.178, "close": 1918.936, "vol": 8549595100}, {"date": "20250805", "open": 1916.544, "high": 1922.268, "low": 1906.669, "close": 1922.268, "vol": 8269650000}, {"date": "20250806", "open": 1920.129, "high": 1943.195, "low": 1914.59, "close": 1943.195, "vol": 9615489700}, {"date": "20250807", "open": 1942.676, "high": 1954.968, "low": 1937.578, "close": 1948.363, "vol": 9475029000}, {"date": "20250808", "open": 1943.899, "high": 1943.899, "low": 1922.001, "close": 1922.001, "vol": 10028855100}, {"date": "20250811", "open": 1918.964, "high": 1956.762, "low": 1918.964, "close": 1954.712, "vol": 8989111300}, {"date": "20250812", "open": 1953.697, "high": 1964.014, "low": 1945.987, "close": 1963.936, "vol": 9650673300}, {"date": "20250813", "open": 1965.975, "high": 1986.563, "low": 1959.553, "close": 1985.228, "vol": 11758971000}, {"date": "20250814", "open": 1985.815, "high": 1996.324, "low": 1961.752, "close": 1965.643, "vol": 13095315700}, {"date": "20250815", "open": 1959.151, "high": 2003.417, "low": 1959.151, "close": 2003.326, "vol": 11267819700}, {"date": "20250818", "open": 2012.248, "high": 2066.357, "low": 2012.248, "close": 2058.375, "vol": 16430341000}, {"date": "20250819", "open": 2059.411, "high": 2085.58, "low": 2050.509, "close": 2069.188, "vol": 14605415000}, {"date": "20250820", "open": 2055.518, "high": 2078.289, "low": 2036.41, "close": 2078.279, "vol": 13020596300}, {"date": "20250821", "open": 2086.139, "high": 2093.706, "low": 2061.041, "close": 2074.684, "vol": 13988133000}, {"date": "20250822", "open": 2075.83, "high": 2110.316, "low": 2075.83, "close": 2110.316, "vol": 14421265000}, {"date": "20250825", "open": 2128.278, "high": 2149.766, "low": 2118.922, "close": 2138.172, "vol": 17245519000}, {"date": "20250826", "open": 2128.975, "high": 2166.703, "low": 2123.474, "close": 2153.013, "vol": 15331905000}, {"date": "20250827", "open": 2165.559, "high": 2183.459, "low": 2113.227, "close": 2113.227, "vol": 19406887000}, {"date": "20250828", "open": 2106.515, "high": 2132.255, "low": 2057.093, "close": 2132.255, "vol": 18700763000}, {"date": "20250829", "open": 2130.154, "high": 2130.191, "low": 2096.591, "close": 2104.248, "vol": 15054409000}, {"date": "20250901", "open": 2127.569, "high": 2152.669, "low": 2122.072, "close": 2132.801, "vol": 15810830000}, {"date": "20250902", "open": 2129.482, "high": 2129.683, "low": 2049.121, "close": 2062.099, "vol": 16685829000}, {"date": "20250903", "open": 2064.721, "high": 2072.812, "low": 2010.381, "close": 2016.973, "vol": 15681548000}, {"date": "20250904", "open": 2019.002, "high": 2028.312, "low": 1952.36, "close": 1983.536, "vol": 14935121000}, {"date": "20250905", "open": 1988.0, "high": 2030.836, "low": 1964.109, "close": 2030.836, "vol": 12658136800}, {"date": "20250908", "open": 2029.695, "high": 2050.756, "low": 2022.68, "close": 2049.197, "vol": 12955520600}, {"date": "20250909", "open": 2046.495, "high": 2046.495, "low": 2013.2, "close": 2021.735, "vol": 13008665100}, {"date": "20250910", "open": 2026.519, "high": 2049.538, "low": 2026.519, "close": 2039.864, "vol": 13657260000}, {"date": "20250911", "open": 2047.449, "high": 2087.204, "low": 2026.213, "close": 2087.204, "vol": 14578585000}, {"date": "20250912", "open": 2092.675, "high": 2114.785, "low": 2087.681, "close": 2092.32, "vol": 15920141000}, {"date": "20250915", "open": 2086.85, "high": 2097.142, "low": 2069.977, "close": 2088.609, "vol": 14137958000}, {"date": "20250916", "open": 2088.278, "high": 2115.545, "low": 2081.896, "close": 2115.545, "vol": 15715458000}, {"date": "20250917", "open": 2110.261, "high": 2123.371, "low": 2100.075, "close": 2117.923, "vol": 13214216400}, {"date": "20250918", "open": 2116.667, "high": 2141.5, "low": 2066.616, "close": 2087.968, "vol": 16628983000}, {"date": "20250919", "open": 2088.833, "high": 2099.657, "low": 2062.119, "close": 2070.452, "vol": 14633434000}, {"date": "20250922", "open": 2073.054, "high": 2086.108, "low": 2066.277, "close": 2085.582, "vol": 12464115100}, {"date": "20250923", "open": 2083.085, "high": 2083.305, "low": 2001.453, "close": 2040.289, "vol": 15892102000}, {"date": "20250924", "open": 2025.656, "high": 2071.474, "low": 2014.584, "close": 2071.474, "vol": 12763941700}, {"date": "20250925", "open": 2070.433, "high": 2106.426, "low": 2069.038, "close": 2082.662, "vol": 14083189000}, {"date": "20250926", "open": 2072.717, "high": 2073.337, "low": 2032.557, "close": 2032.557, "vol": 12316738800}, {"date": "20250929", "open": 2031.64, "high": 2052.195, "low": 2013.142, "close": 2045.13, "vol": 10106210100}, {"date": "20250930", "open": 2057.271, "high": 2074.946, "low": 2057.271, "close": 2064.132, "vol": 10725471600}]

样例输出1为：
{"reason": "当前板块处于三角形整理，下降趋势线为8月27日与9月18日开盘价所连接成的点（这两个点为阶段高位K线的实体点位）。目前未突破三角形上侧的下降趋势线，不符合买点", "buy": false}

样例输入2为：
风电设备
[{"date": "20250701", "open": 3952.248, "high": 3961.894, "low": 3927.045, "close": 3961.894, "vol": 674302490}, {"date": "20250702", "open": 4057.552, "high": 4080.945, "low": 3946.852, "close": 3966.673, "vol": 781791400}, {"date": "20250703", "open": 3971.14, "high": 3989.997, "low": 3937.816, "close": 3984.901, "vol": 575460030}, {"date": "20250704", "open": 3975.113, "high": 3975.113, "low": 3878.931, "close": 3884.383, "vol": 779727600}, {"date": "20250707", "open": 3870.544, "high": 3906.261, "low": 3853.354, "close": 3903.846, "vol": 547769140}, {"date": "20250708", "open": 3907.852, "high": 3990.876, "low": 3890.34, "close": 3989.077, "vol": 706878170}, {"date": "20250709", "open": 3995.661, "high": 4005.361, "low": 3925.758, "close": 3935.661, "vol": 581002510}, {"date": "20250710", "open": 3927.455, "high": 3936.476, "low": 3891.435, "close": 3915.685, "vol": 417184820}, {"date": "20250711", "open": 3911.932, "high": 3928.676, "low": 3876.737, "close": 3911.787, "vol": 464567230}, {"date": "20250714", "open": 3911.112, "high": 3930.867, "low": 3899.776, "close": 3928.314, "vol": 438371510}, {"date": "20250715", "open": 3920.916, "high": 3921.977, "low": 3831.587, "close": 3859.948, "vol": 705250960}, {"date": "20250716", "open": 3850.112, "high": 3878.925, "low": 3836.081, "close": 3865.24, "vol": 485004480}, {"date": "20250717", "open": 3859.558, "high": 3887.044, "low": 3858.871, "close": 3886.832, "vol": 393385710}, {"date": "20250718", "open": 3893.58, "high": 3919.977, "low": 3852.583, "close": 3918.17, "vol": 536565170}, {"date": "20250721", "open": 3913.864, "high": 3964.365, "low": 3909.887, "close": 3963.698, "vol": 702315240}, {"date": "20250722", "open": 3988.403, "high": 4026.27, "low": 3978.05, "close": 4005.569, "vol": 870314120}, {"date": "20250723", "open": 4018.723, "high": 4019.572, "low": 3951.444, "close": 3965.113, "vol": 756805100}, {"date": "20250724", "open": 3956.855, "high": 3995.558, "low": 3949.031, "close": 3994.886, "vol": 567211270}, {"date": "20250725", "open": 3996.307, "high": 3997.069, "low": 3958.211, "close": 3973.344, "vol": 555714930}, {"date": "20250728", "open": 3974.596, "high": 4016.879, "low": 3969.934, "close": 4005.769, "vol": 460215400}, {"date": "20250729", "open": 3999.331, "high": 4029.549, "low": 3976.1, "close": 4029.549, "vol": 532812910}, {"date": "20250730", "open": 4027.033, "high": 4046.377, "low": 4000.649, "close": 4022.568, "vol": 554180920}, {"date": "20250731", "open": 4001.43, "high": 4055.555, "low": 3952.634, "close": 3965.647, "vol": 581659770}, {"date": "20250801", "open": 3968.016, "high": 4021.347, "low": 3966.586, "close": 4013.791, "vol": 674666570}, {"date": "20250804", "open": 3997.378, "high": 4057.053, "low": 3991.547, "close": 4056.977, "vol": 527807220}, {"date": "20250805", "open": 4069.677, "high": 4123.248, "low": 4064.319, "close": 4123.248, "vol": 526863490}, {"date": "20250806", "open": 4120.383, "high": 4154.225, "low": 4101.848, "close": 4147.527, "vol": 604752700}, {"date": "20250807", "open": 4137.84, "high": 4157.784, "low": 4115.689, "close": 4146.339, "vol": 574948820}, {"date": "20250808", "open": 4153.091, "high": 4277.488, "low": 4149.521, "close": 4260.975, "vol": 978129630}, {"date": "20250811", "open": 4274.711, "high": 4380.187, "low": 4265.268, "close": 4369.217, "vol": 839555540}, {"date": "20250812", "open": 4378.66, "high": 4390.76, "low": 4325.227, "close": 4362.669, "vol": 744411370}, {"date": "20250813", "open": 4353.172, "high": 4396.21, "low": 4342.163, "close": 4384.896, "vol": 646796940}, {"date": "20250814", "open": 4383.534, "high": 4384.496, "low": 4281.113, "close": 4296.051, "vol": 662618070}, {"date": "20250815", "open": 4289.878, "high": 4459.884, "low": 4289.878, "close": 4452.161, "vol": 849344080}, {"date": "20250818", "open": 4461.049, "high": 4492.604, "low": 4438.674, "close": 4476.694, "vol": 834301860}, {"date": "20250819", "open": 4465.14, "high": 4478.535, "low": 4424.262, "close": 4452.286, "vol": 651670060}, {"date": "20250820", "open": 4453.367, "high": 4481.987, "low": 4405.966, "close": 4481.987, "vol": 610063850}, {"date": "20250821", "open": 4480.937, "high": 4485.223, "low": 4423.096, "close": 4446.758, "vol": 565865040}, {"date": "20250822", "open": 4446.73, "high": 4487.3, "low": 4421.667, "close": 4487.3, "vol": 602797620}]

样例输出2为：
{"reason": "当前板块处于横盘整理阶段，8月20日触碰到了7月31日与8月14日两个低点组成的的上升趋势线后反弹，8月21日下跌收于趋势线，今天8月22日反弹收阳线与趋势线上方，可考虑试错", "buy": true}

"""


def get_concept_price(symbol="人形机器人", start_date="20250701", end_date="20251008"):
    d = []
    ret_day = ak.stock_board_concept_index_ths(
        symbol=symbol, start_date=start_date, end_date=end_date
    )
    for data in ret_day.itertuples():
        d.append(
            {
                "date": data.日期.strftime("%Y%m%d"),
                "open": data.开盘价,
                "high": data.最高价,
                "low": data.最低价,
                "close": data.收盘价,
                "vol": data.成交量,
            }
        )
    return json.dumps(d)



def get_industry_price(symbol="风电设备", start_date="20250701", end_date="20251008"):
    d = []
    ret_day = ak.stock_board_industry_index_ths(
        symbol=symbol, start_date=start_date, end_date=end_date
    )
    for data in ret_day.itertuples():
        d.append(
            {
                "date": data.日期.strftime("%Y%m%d"),
                "open": data.开盘价,
                "high": data.最高价,
                "low": data.最低价,
                "close": data.收盘价,
                "vol": data.成交量,
            }
        )
    return json.dumps(d)


def get_llm_response():
    messages = [
        {"role": "system", "content": prompt},
        {"role": "user", "content": f"风电设备\n{get_industry_price(symbol='风电设备', start_date='20250701', end_date='20250830')}"},
    ]
    response = client.chat.completions.create(
        model="deepseek-reasoner", messages=messages, stream=False
    )
    # for chunk in response:
    #     if "choices" in chunk and len(chunk["choices"]) > 0:
    #         delta = chunk["choices"][0]["delta"]
    #         if "content" in delta:
    #             print(delta["content"], end="", flush=True)
    print(response.choices[0].message.content)

@dataclass
class StockDayPrice:
    date: str
    open: float
    high: float
    low: float
    close: float
    vol: int

def probe_buy_point(prices: list[StockDayPrice]) -> bool:
    # Implement your logic to analyze the prices and determine if it's a buy point
    # This is a placeholder implementation
    if len(prices) < 2:
        return False
    return prices[-1].close > prices[-2].close

if __name__ == "__main__":
    print(f"消费电子\n{get_industry_price(symbol='消费电子', start_date='20250701', end_date='20251008')}")

    # print(f"游戏\n{get_concept_price(symbol='游戏', start_date='20250701', end_date='20251008')}")

    # get_llm_response()
